<%= simple_form_for @site, html: { class: 'profile-form' } do |pf| %>
    <%= pf.error_notification %>

    <% if pf.error_notification %>
        <div>
            <ul>
                <% @site.profile.errors.messages.each do |attribute, messages| %>
                    <li>
                        <%= link_to attribute.to_s.humanize, "#site_profile_attributes_#{attribute}", class: 'scroll' %>
                        <% if messages.size == 1 %>
                            <%= messages.first %>
                        <% else %>
                            <ul class="list-unstyled">
                                <% messages.each do |message| %>
                                    <li>
                                        <span class="help-block">
                                            <%= message %>
                                        </span>
                                    </li>
                                <% end %>
                            </ul>
                        <% end %>
                    </li>
                <% end %>
            </ul>
        </div>
    <% end %>

    <div id="scans">
        <fieldset>
            <h2 id="scans-h">
                Scans
            </h2>

            <div class="row">
                <div class="col-md-6">
                    <%= pf.input :max_parallel_scans,
                                label: 'Maximum parallel scans'
                    %>
                </div>
                <div class="col-md-6 input-help">
                    <%= messages_for( :max_parallel_scans ) %>

                    <p class="help-block alert alert-warning">
                        It is recommended that the value be set to <kbd>1</kbd>,
                        in order to keep server stress low and prevent sessions
                        of authenticated scans from interfering with each other.
                    </p>
                </div>
            </div>
        </fieldset>
    </div>

    <hr/>

    <%= pf.simple_fields_for :profile do |f| %>
    <div id="platforms">
        <fieldset>
            <h2 id="platforms-h">
                Software stack
                <small>What platforms does the application use?</small>
            </h2>

            <div class="help-block alert alert-info">
                Providing as much platform information as possible will result
                in a much faster and focused scan.
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-info">
                        <div class="panel-heading">
                            Popular configurations
                        </div>

                        <div class="panel-body">
                            <div class="btn-group">
                                <button class="btn btn-default platforms-preset">
                                    Linux, Apache, MySQL, PHP
                                </button>
                                <button class="btn btn-default platforms-preset">
                                    Linux, Nginx, Postgresql, Ruby, Ruby on Rails
                                </button>
                                <button class="btn btn-default platforms-preset">
                                    Linux, TomCat, Generic SQL family, Java
                                </button>
                                <button class="btn btn-default platforms-preset">
                                    MS Windows, IIS, MSSQL, ASP, ASP.NET
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div id="platforms-list" class="row">
                <% [:os, :servers, :db, :languages, :frameworks].each_with_index do |type, i| %>
                    <div class="col-md-2">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <%= platform_type_fullname( type ) %>
                            </div>
                            <div class="panel-body">
                                <%= f.input :platforms, collection: valid_platforms( type ),
                                            label:  false,
                                            as: :check_boxes,
                                            label_method: lambda { |p| platform_fullname( p ) }
                                %>
                            </div>
                        </div>
                    </div>
                <% end %>
            </div>

            <%= advanced id: 'platforms' do %>
                <div class="row">
                    <div class="col-md-6">
                        <%= f.input :no_fingerprinting,
                                    label: 'Disable fingerprinting'
                        %>
                    </div>
                    <div class="col-md-6 checkbox-help">
                        <%= messages_for( :no_fingerprinting ) %>
                    </div>
                </div>
            <% end %>

        </fieldset>
    </div>

    <hr/>

    <div id="scope">
        <fieldset>
            <h2 id="scope-h">
                Scope
                <small>Are there any special considerations regarding the scope of the scan?</small>
            </h2>

            <div class="row">
                <div class="col-md-6">
                    <%= f.input :scope_exclude_file_extensions,
                                label: 'Exclude file extensions',
                                placeholder: 'Process all resources identically',
                                input_html: {
                                        value: @site.profile.scope_exclude_file_extensions.join( ' ' )
                                } %>
                </div>
                <div class="col-md-6 textarea-help">
                    <%= messages_for( :scope_exclude_file_extensions ) %>
                    <p class="help-block">Separate extensions with space.</p>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <%= f.input :scope_template_path_patterns,
                                label: 'Path template patterns',
                                placeholder: 'Process all resources identically',
                                input_html: {
                                        value: @site.profile.scope_template_path_patterns.join( "\n" )
                                } %>
                </div>
                <div class="col-md-6 textarea-help">
                    <%= messages_for( :scope_template_path_patterns ) %>
                    <p class="help-block">Input each rule in its own line.</p>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <%= f.input :scope_exclude_path_patterns,
                                label: 'Path exclusion patterns',
                                placeholder: 'Do not exclude any resources',
                                input_html: { value: @site.profile.scope_exclude_path_patterns.join( "\n" ) } %>
                </div>
                <div class="col-md-6 textarea-help">
                    <%= messages_for( :scope_exclude_path_patterns ) %>
                    <p class="help-block">Input each rule in its own line.</p>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <%= f.input :scope_auto_redundant_paths,
                                label: 'Parameter redundancy limit',
                                placeholder: 'Infinite' %>
                </div>
                <div class="col-md-6 input-help">
                    <%= messages_for( :scope_auto_redundant_paths ) %>
                </div>
            </div>

            <% if @site.https? %>
            <div class="row">
                <div class="col-md-6">
                    <%= f.input :scope_https_only,
                                label: 'Only follow HTTPS URLs' %>
                </div>
            </div>
            <% end %>

            <%= advanced id: 'scope' do %>
                <div class="row">
                    <div class="col-md-6">
                        <%= f.input :scope_extend_paths,
                                    label: 'Extend paths',
                                    placeholder: 'Only use paths discovered by the crawl',
                                    input_html: { value: @site.profile.scope_extend_paths.join( "\n" ) } %>
                    </div>
                    <div class="col-md-6 textarea-help">
                        <%= messages_for( :scope_extend_paths ) %>
                        <p class="help-block">Input each path in its own line.</p>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <%= f.input :scope_exclude_content_patterns,
                                    label: 'Content exclusion patterns',
                                    placeholder: 'Include all pages',
                                    input_html: {
                                            value: @site.profile.scope_exclude_content_patterns.join( "\n" )
                                    } %>
                    </div>
                    <div class="col-md-6 textarea-help">
                        <%= messages_for( :scope_exclude_content_patterns ) %>
                        <p class="help-block">Input each rule in its own line.</p>
                    </div>
                </div>
            <% end %>
        </fieldset>
    </div>

    <hr/>

    <div id="inputs">
        <fieldset>
            <h2 id="inputs-h">
                Inputs
                <small>Does the application require special input handling?</small>
            </h2>

            <div class="row">
                <div class="col-md-6">
                    <%= f.input :audit_link_templates,
                                label: 'Custom inputs',
                                placeholder: 'Custom inputs not necessary',
                                input_html: { value: @site.profile.audit_link_templates.join( "\n" ) } %>
                </div>
                <div class="col-md-6 textarea-help">
                    <%= messages_for( :audit_link_templates ) %>
                    <p class="help-block">
                        For example, to extract the <code>input1</code> and <code>input2</code> inputs from
                        <code>http://test.com/input1/value1/input2/value2</code> use
                        <code>/input1\/(?&lt;input1&gt;\w+)\/input2\/(?&lt;input2&gt;\w+)/</code>.
                    </p>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <%= f.input :scope_url_rewrites,
                                label: 'URL rewrite rules',
                                placeholder: 'No URL rewriting',
                                input_html: {
                                        value: @site.profile.scope_url_rewrites.
                                                       map { |k, v| "#{k}:#{v}" }.join( "\n" )
                                } %>
                </div>
                <div class="col-md-6 textarea-help">
                    <%= messages_for( :scope_url_rewrites ) %>
                    <p class="help-block">
                        Rules take the format of <kbd>pattern:substitution</kbd>,
                        input each rule in its own line.<br/>

                        For example, to convert <code>http://test.com/articles/some-stuff/23</code> to
                        <code>http://test.com/articles.php?id=23</code> use
                        <code>/articles\/[\w-]+\/(\d+)/:articles.php?id=\1</code>.
                    </p>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <%= f.input :input_values,
                                label: 'Fill-in values',
                                placeholder: 'No need for special values',
                                input_html: {
                                        value: @site.profile.input_values.
                                                map { |k, v| "#{k}=#{v}" }.join( "\n" )
                                } %>
                </div>
                <div class="col-md-6 textarea-help">
                    <%= messages_for( :input_values ) %>
                    <p class="help-block">
                        Rules take the format of <kbd>pattern=value</kbd>,
                        input each rule in its own line &mdash; <kbd>pattern</kbd>
                        will be matched against input names.

                        <br/>

                        Rules will be matched in the given order.
                    </p>
                </div>
            </div>
        </fieldset>
    </div>

    <hr/>

    <div id="http">
        <fieldset>
            <h2 id="http-h">
                HTTP
                <small>Is there any special HTTP configuration required?</small>
            </h2>

            <div class="row">
                <div class="col-md-6">
                    <%= f.input :http_authentication_username,
                                placeholder: 'No authentication',
                                label: 'Username' %>
                </div>
                <div class="col-md-6 input-help">
                    <%= messages_for( :http_authentication_username ) %>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <%= f.input :http_authentication_password, as: :string,
                                placeholder: 'No authentication',
                                label: 'Password' %>
                </div>
                <div class="col-md-6 input-help">
                    <%= messages_for( :http_authentication_password ) %>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <%= f.input :http_cookies,
                                label: 'Cookies',
                                placeholder: 'No need for special cookies',
                                input_html: {
                                        value: @site.profile.http_cookies.
                                                       map { |k, v| "#{k}=#{v}" }.join( "\n" )
                                } %>
                </div>
                <div class="col-md-6 textarea-help">
                    <%= messages_for( :http_cookies ) %>
                    <p class="help-block">
                        Cookies take the format of <kbd>name=value</kbd>,
                        input each cookie in its own line.
                    </p>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <%= f.input :http_request_headers,
                                label: 'Headers',
                                placeholder: 'No need for special headers',
                                input_html: {
                                        value: @site.profile.http_request_headers.
                                                       map { |k, v| "#{k}=#{v}" }.join( "\n" )
                                } %>
                </div>
                <div class="col-md-6 textarea-help">
                    <%= messages_for( :http_request_headers ) %>
                    <p class="help-block">
                        Headers take the format of <kbd>name=value</kbd>,
                        input each header in its own line.
                    </p>
                </div>
            </div>

            <%= advanced id: 'http' do %>
                <div class="row">
                    <div class="col-md-6">
                        <%= f.input :http_request_concurrency,
                                    label: 'Request concurrency',
                                    placeholder: Arachni::Options.http.request_concurrency.to_s
                        %>
                    </div>
                    <div class="col-md-6 input-help">
                        <%= messages_for( :http_request_concurrency ) %>
                    </div>
                </div>
            <% end %>

        </fieldset>
    </div>

    <hr/>

    <div id="browser">
        <fieldset>
            <h2 id="browser-h">
                Browser
                <small>Browser-related options.</small>
            </h2>

            <div class="row">
                <div class="col-md-6">
                    <%= f.input :browser_cluster_wait_for_elements,
                                label: 'Wait for elements to appear',
                                placeholder: 'No need for special rules regarding the ready-state of pages',
                                input_html: {
                                        value: @site.profile.browser_cluster_wait_for_elements.
                                                       map { |k, v| "#{k}:#{v}" }.join( "\n" )
                                }
                    %>
                </div>
                <div class="col-md-6 textarea-help">
                    <%= messages_for( :browser_cluster_wait_for_elements ) %>
                    <div class="help-block">
                        <p>
                            Rules take the format of <kbd>pattern:css</kbd>,
                            input each rule in its own line.
                        </p>

                        <p>
                            For example, to wait for an element with an ID attribute
                            of <code>myElement</code> to appear when visiting a page
                            whose URL includes the string <code>withElement</code>
                            (like: <code>http://test.com/blah#withElement</code>)
                            you can use: <code>withElement:#myElement</code>
                        </p>

                        <p>
                            Sometimes it is necessary to wait for an element for a
                            page whose URL does not include a string; this is common
                            for client-side MVC frameworks when URLs include no
                            route information in the fragment section.
                        </p>

                        <p>
                            In this case, in order to wait for an element with an ID
                            attribute of <code>myElement</code> when the URL has no
                            hash (<code>#</code>) part, use: <code>^((?!#).)*$:#myElement</code>
                        </p>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <%= f.input :browser_cluster_ignore_images,
                                label: 'Do not load images'
                    %>
                </div>
                <div class="col-md-6 checkbox-help">
                    <%= messages_for( :browser_cluster_ignore_images ) %>
                </div>
            </div>
        </fieldset>
    </div>
    <% end %>

    <div class="form-actions">
        <%= pf.button :submit, class: 'hide' %>
    </div>
<% end %>
