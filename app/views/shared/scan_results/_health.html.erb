<% if @health.any? %>
    <%
        x_axis = @health.map { |d| d['runtime'] }.to_json.html_safe
    %>

    <script>
        window.performance_snapshots = <%= @health.to_json.html_safe %>;
    </script>

    <p class="alert alert-help">
        <i class="fa fa-info-circle"></i>

        You can <%= link_to 'adjust the HTTP request concurrency',
                            "#{edit_site_path( @site )}#!/site_profile_http_request_concurrency",
                            target: '_blank'
                    %>

        in order to find the perfect balance between performance and server stress.

        <br/>

        When necessary, the system will automatically throttle itself to match current conditions.
    </p>

  <div id="health-application-server-group" class="row">
    <div id="health-application" class="col-md-3 group">
      <h2>Application</h2>

      <div class="row">
        <div class="chart-container col-md-12" id="health-total_average_app_time">
          <h3>
            Responsiveness
          </h3>

          <% state = @revision.performance_snapshot.total_average_app_time_state %>
          <h4 class="text text-state-<%= state %> health-state">
            <%= state.capitalize %>
          </h4>

          <p class="text-muted health-description">
            <%= case state
                    when :excellent
                        'The application does not seem to be under any stress.'

                    when :good
                        'The application seems to be under a little stress, this ' +
                          'will have a small impact on performance.'

                    when :fair
                        'The application seems to be under stress, this ' +
                          'will have a considerable impact on performance.'

                    when :poor
                        'The application seems to be under a lot of stress, this ' +
                          'will have a massive impact on performance.'
                end %>
        </div>
      </div>

      <div class="row">
        <div class="chart-container col-md-12" id="current_total_average_app_time"></div>
      </div>

      <div class="row">
        <div class="chart-container col-md-12" id="historic_total_average_app_time"></div>
      </div>
    </div>

    <div id="health-server" class="col-md-9 group">
      <h2>Server</h2>

        <div class="row">
          <div class="chart-container col-md-4" id="health-network_reliability">
            <h3>
              Reliability
            </h3>

            <% state = @revision.performance_snapshot.http_failed_count_state %>
            <h4 class="text text-state-<%= state %> health-state">
              <%= state.capitalize %>
            </h4>

            <p class="text-muted health-description">
              <%= case state
                      when :excellent
                          'Connections seem highly reliable.'

                      when :good
                          'A small amount of requests have failed, nothing to ' +
                            'worry about yet though.'

                      when :fair
                          'A considerable amount of requests have failed, there ' +
                            'is a small chance that the scan will yield incomplete results.'

                      when :poor
                          'A large amount of requests have failed, there is a ' +
                            'chance that the scan will yield incomplete results.'
                  end %>
            </p>
          </div>

          <div class="chart-container col-md-4" id="health-server_performance">
            <h3>
              Performance
            </h3>

            <% state = @revision.performance_snapshot.http_average_responses_per_second_state %>
            <h4 class="text text-state-<%= state %> health-state">
              <%= state.capitalize %>
            </h4>

            <p class="text-muted health-description">
              <%= case state
                      when :excellent
                          'The server is performing very group.'

                      when :good
                          'The server is performing group enough.'

                      when :fair
                          'The server is somewhat slow, this will have ' +
                            'an impact on performance.'

                      when :poor
                          'The server is performing poorly, this will ' +
                            'have a considerable impact on performance.'
                  end %>
            </p>
          </div>

          <div class="chart-container col-md-4" id="health-server_responsiveness">
            <h3>
              Responsiveness
            </h3>

            <% state = @revision.performance_snapshot.http_average_response_time_state %>
            <h4 class="text text-state-<%= state %> health-state">
              <%= state.capitalize %>
            </h4>

            <p class="text-muted health-description">
              <%= case state
                      when :excellent
                          'The server does not seem to be under any stress.'

                      when :good
                          'The server seems to be under a little stress, this ' +
                            'will have a small impact on performance.'

                      when :fair
                          'The server seems to be under stress, this ' +
                            'will have a considerable impact on performance.'

                      when :poor
                          'The server seems to be under a lot of stress, this ' +
                            'will have a massive impact on performance.'
                  end %>
            </p>
          </div>
        </div>

      <div class="row">
        <div class="chart-container col-md-4" id="current_http_failed_count"></div>
        <div class="chart-container col-md-4" id="current_http_average_responses_per_second"></div>
        <div class="chart-container col-md-4" id="current_http_average_response_time"></div>
        <div class="chart-container col-md-4" id="current_total_average_app_time"></div>
      </div>

      <div class="row">
        <div class="chart-container col-md-4" id="historic_http_failed_count"></div>
        <div class="chart-container col-md-4" id="historic_http_average_responses_per_second"></div>
        <div class="chart-container col-md-4" id="historic_http_average_response_time"></div>
        <div class="chart-container col-md-4" id="historic_total_average_app_time"></div>
      </div>
    </div>
  </div>

  <script>
      window.http_average_responses_per_second_gauge = window.generateGaugeChart(
          '#current_http_average_responses_per_second',
          {
              name:   'Average responses per second',
              value:  <%= @revision.performance_snapshot.http_average_responses_per_second.to_i %>,
              max:    <%= PerformanceSnapshot::MAX_HTTP_AVERAGE_RESPONSES_PER_SECOND %>,
              unit:   'responses/second'
          }
      );

      window.http_average_response_time_gauge = window.generateGaugeChart(
          '#current_http_average_response_time',
          {
              name:   'Average response times',
              value:  <%= @revision.performance_snapshot.http_average_response_time.round( 2 ) %>,
              max:    <%= PerformanceSnapshot::MAX_HTTP_AVERAGE_RESPONSE_TIME %>,
              unit:   'seconds/response',
              better: 'low'
          }
      );

      window.http_failed_count_gauge = window.generateGaugeChart(
          '#current_http_failed_count',
          {
              name:  'Reliability',
              value: <%= @revision.performance_snapshot.http_failed_count_pct %>,
              label: <%= @revision.performance_snapshot.http_failed_count_pct %> + '%',
              max:    <%= PerformanceSnapshot::MAX_HTTP_FAILED_RATIO %>,
              unit:  'failed requests',
              better: 'low'
          }
      );

      window.http_average_responses_per_second_chart = window.generateLineChart(
          '#historic_http_average_responses_per_second',
          {
              name:   'Average responses per second',
              values: <%= @health.map { |d| d['http_average_responses_per_second'] }.to_json %>,
              x_axis: <%= x_axis %>,
              max:    <%= PerformanceSnapshot::MAX_HTTP_AVERAGE_RESPONSES_PER_SECOND %>
          }
      );

      window.http_average_response_time_chart = window.generateLineChart(
          '#historic_http_average_response_time',
          {
              name:   'Average response times',
              values: <%= @health.map { |d| d['http_average_response_time'] }.to_json %>,
              x_axis: <%= x_axis %>,
              max:    <%= PerformanceSnapshot::MAX_HTTP_AVERAGE_RESPONSE_TIME %>,
              better: 'low'
          }
      );

      window.http_failed_count_chart = window.generateLineChart(
          '#historic_http_failed_count',
          {
              name:  'Timed out requests',
              values: <%= @health.map { |d| d['http_failed_count'] }.to_json %>,
              x_axis: <%= x_axis %>,
              max:    <%= @revision.performance_snapshot.max_http_failed_count %>,
              better: 'low'
          }
      );

      window.historic_total_average_app_time_gauge = window.generateGaugeChart(
          '#current_total_average_app_time',
          {
              name:  'Application responsiveness',
              value:  <%= @revision.performance_snapshot.total_average_app_time.to_f.round( 2 ) %>,
              min:    0,
              max:    <%= PerformanceSnapshot::MAX_TOTAL_AVERAGE_APP_TIME %>,
              unit:   'seconds/response',
              better: 'low'
          }
      );

      window.total_average_app_time_chart = window.generateLineChart(
          '#historic_total_average_app_time',
          {
              name:  'Application responsiveness',
              values: <%= @health.map { |d| d['total_average_app_time'] }.to_json %>,
              x_axis: <%= x_axis %>,
              max:    <%= @revision.performance_snapshot.total_average_app_time %>,
              better: 'low'
          }
      );
  </script>

  <div id="health-network" class="row">
    <div class="col-md-12 group">
      <h2>Network</h2>

      <div class="row">
        <div class="chart-container col-md-6" id="health-scanner_performance">
          <h3>
            Download
          </h3>

          <p class="text-muted health-description">
          </p>
        </div>

        <div class="chart-container col-md-6" id="health-scanner_performance">
          <h3>
            Upload
          </h3>

          <p class="text-muted health-description">
          </p>
        </div>

      </div>

      <div class="row">
        <div class="chart-container col-md-6" id="current_download_kbps"></div>
        <div class="chart-container col-md-6" id="current_upload_kbps"></div>
      </div>

      <div class="row">
        <div class="chart-container col-md-6" id="historic_download_kbps"></div>
        <div class="chart-container col-md-6" id="historic_upload_kbps"></div>
      </div>
    </div>
  </div>

    <div id="health-client" class="row">
      <div class="col-md-12 group">

      <h2>Client</h2>

      <div class="row">
        <div class="chart-container col-md-3" id="health-network_reliability">
          <h3>
            Reliability
          </h3>

          <% state = @revision.performance_snapshot.browser_failed_job_count_state %>
          <h4 class="text text-state-<%= state %> health-state">
            <%= state.capitalize %>
          </h4>

          <p class="text-muted health-description">
            <%= case state
                    when :excellent
                        'DOM operations seem highly reliable.'

                    when :good
                        'A small amount of DOM operations have failed, nothing to ' +
                          'worry about yet though.'

                    when :fair
                        'A considerable amount of DOM operations have failed, there ' +
                          'is a small chance that scan will yield incomplete results.'

                    when :poor
                        'A large amount of DOM operations have failed, there is a ' +
                          'chance that scan will yield incomplete results.'
                end %>
          </p>
        </div>

        <div class="chart-container col-md-3" id="health-scanner_performance">
          <h3>
            Performance
          </h3>

          <% state = @revision.performance_snapshot.http_max_concurrency_state %>
          <h4 class="text text-state-<%= state %> health-state">
            <%= state.capitalize %>
          </h4>

          <p class="text-muted health-description">
            <%= case state
                    when :excellent
                        'Operating close to the configured maximum.'

                    when :good
                        'To alleviate temporary server stress concurrency had to be lowered a little.'

                    when :fair
                        'To alleviate persistent server stress concurrency had to be lowered considerably .'

                    when :poor
                        'To alleviate high server stress concurrency had to be greatly lowered.'
                end %>
          </p>
        </div>

        <div class="chart-container col-md-3" id="health-request_counter">
          <h3>
            HTTP request counter
          </h3>

          <p class="text-muted health-description">
            Nothing to add, just FYI.
          </p>
        </div>

        <div class="chart-container col-md-3" id="health-request_counter">
          <h3>
            Browser job counter
          </h3>

          <p class="text-muted health-description">
            Nothing to add, just FYI.
          </p>
        </div>

      </div>

      <div class="row">
        <div class="chart-container col-md-3" id="current_browser_job_failed_count"></div>
        <div class="chart-container col-md-3" id="current_http_max_concurrency"></div>
        <div class="chart-container col-md-3" id="current_http_request_count"></div>
        <div class="chart-container col-md-3" id="current_browser_job_count"></div>
      </div>

      <div class="row">
        <div class="chart-container col-md-3" id="historic_browser_job_failed_count"></div>
        <div class="chart-container col-md-3" id="historic_http_max_concurrency"></div>
        <div class="chart-container col-md-3" id="historic_http_request_count"></div>
        <div class="chart-container col-md-3" id="historic_browser_job_count"></div>
      </div>
      </div>
    </div>

  <script>
      window.http_request_count_gauge = window.generateGaugeChart(
          '#current_http_request_count',
          {
              name:  'Requests',
              value: <%= @revision.performance_snapshot.http_request_count %>,
              label: <%= number_with_delimiter( @revision.performance_snapshot.http_request_count ).to_json.html_safe %>,
              unit:  'requests'
          }
      );

      window.http_request_count_chart = window.generateLineChart(
          '#historic_http_request_count',
          {
              name:  'Requests',
              values: <%= @health.map { |d| d['http_request_count'] }.to_json %>,
              x_axis: <%= x_axis %>
          }
      );

      window.browser_job_count_gauge = window.generateGaugeChart(
          '#current_browser_job_count',
          {
              name:  'Jobs',
              value: <%= @revision.performance_snapshot.browser_job_count %>,
              label: <%= number_with_delimiter( @revision.performance_snapshot.browser_job_count ).to_json.html_safe %>,
              unit:  'jobs'
          }
      );

      window.browser_job_count_chart = window.generateLineChart(
          '#historic_browser_job_count',
          {
              name:  'Events',
              values: <%= @health.map { |d| d['browser_job_count'] }.to_json %>,
              x_axis: <%= x_axis %>
          }
      );

      window.download_kbps_gauge = window.generateGaugeChart(
          '#current_download_kbps',
          {
              name:  'Download KBps',
              value: <%= @revision.performance_snapshot.download_kbps %>,
              label: <%= @revision.performance_snapshot.download_kbps %> + ' KBps',
              max:    <%= @health.map { |d| d['download_kbps'].to_f }.max %>,
              better: 'high'
          }
      );

      window.download_bkps_chart = window.generateLineChart(
          '#historic_download_kbps',
          {
              name:  'Download KBps',
              values: <%= @health.map { |d| d['download_kbps'] }.to_json %>,
              x_axis: <%= x_axis %>,
              max:    <%= @revision.performance_snapshot.download_kbps %>,
              better: 'high'
          }
      );

      window.upload_kbps_gauge = window.generateGaugeChart(
          '#current_upload_kbps',
          {
              name:  'Download KBps',
              value: <%= @revision.performance_snapshot.upload_kbps %>,
              label: <%= @revision.performance_snapshot.upload_kbps %> + ' KBps',
              max:    <%= @health.map { |d| d['upload_kbps'].to_f }.max %>,
              better: 'high'
          }
      );

      window.download_bps_gauge = window.generateLineChart(
          '#historic_upload_kbps',
          {
              name:  'Download KBps',
              values: <%= @health.map { |d| d['upload_kbps'] }.to_json %>,
              x_axis: <%= x_axis %>,
              max:    <%= @revision.performance_snapshot.upload_kbps %>,
              better: 'high'
          }
      );

      window.browser_job_failed_count_gauge = window.generateGaugeChart(
          '#current_browser_job_failed_count',
          {
              name:  'Reliability',
              value: <%= @revision.performance_snapshot.browser_job_failed_count_pct %>,
              label: <%= @revision.performance_snapshot.browser_job_failed_count_pct %> + '%',
              max:    <%= PerformanceSnapshot::MAX_BROWSER_FAILED_RATIO %>,
              unit:  'failed browser jobs',
              better: 'low'
          }
      );

      window.browser_job_failed_count_chart = window.generateLineChart(
          '#historic_browser_job_failed_count',
          {
              name:  'Failed browser jobs',
              values: <%= @health.map { |d| d['browser_job_failed_count'] }.to_json %>,
              x_axis: <%= x_axis %>,
              max:    <%= @revision.performance_snapshot.max_browser_job_failed_count %>,
              better: 'low'
          }
      );

      window.http_max_concurrency_gauge = window.generateGaugeChart(
          '#current_http_max_concurrency',
          {
              name:  'Request concurrency',
              value: <%= @revision.performance_snapshot.http_max_concurrency %>,
              min:   <%= PerformanceSnapshot::MIN_MAX_CONCURRENCY %>,
              max:   <%= @revision.performance_snapshot.http_original_max_concurrency %>,
              unit:  'open connections'
          }
      );

      window.http_max_concurrency_chart = window.generateLineChart(
          '#historic_http_max_concurrency',
          {
              name:  'Request concurrency',
              values: <%= @health.map { |d| d['http_max_concurrency'] }.to_json %>,
              x_axis: <%= x_axis %>,
              min:    <%= PerformanceSnapshot::MIN_MAX_CONCURRENCY %>,
              max:   <%= @revision.performance_snapshot.http_original_max_concurrency %>
          }
      );
  </script>

<% else %>

    <p class="alert alert-info">
        No health data available.
    </p>

<% end %>
